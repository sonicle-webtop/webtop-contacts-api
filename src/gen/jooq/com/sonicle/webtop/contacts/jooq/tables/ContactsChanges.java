/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.contacts.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactsChanges extends org.jooq.impl.TableImpl<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>contacts.contacts_changes</code>
     */
    public static final ContactsChanges CONTACTS_CHANGES = new ContactsChanges();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord> getRecordType() {
        return com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord.class;
    }

    /**
     * The column <code>contacts.contacts_changes.id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord, java.lang.Long> ID = createField(org.jooq.impl.DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('contacts.seq_contacts_changes'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>contacts.contacts_changes.category_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord, java.lang.Integer> CATEGORY_ID = createField(org.jooq.impl.DSL.name("category_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>contacts.contacts_changes.contact_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord, java.lang.String> CONTACT_ID = createField(org.jooq.impl.DSL.name("contact_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.field("'*'::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>contacts.contacts_changes.change_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord, org.joda.time.DateTime> CHANGE_TIMESTAMP = createField(org.jooq.impl.DSL.name("change_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(org.jooq.impl.DSL.field("'2000-01-01 01:00:00+01'::timestamp with time zone", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>contacts.contacts_changes.change_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord, java.lang.String> CHANGE_TYPE = createField(org.jooq.impl.DSL.name("change_type"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    private ContactsChanges(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContactsChanges(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>contacts.contacts_changes</code> table reference
     */
    public ContactsChanges(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), CONTACTS_CHANGES);
    }

    /**
     * Create an aliased <code>contacts.contacts_changes</code> table reference
     */
    public ContactsChanges(org.jooq.Name alias) {
        this(alias, CONTACTS_CHANGES);
    }

    /**
     * Create a <code>contacts.contacts_changes</code> table reference
     */
    public ContactsChanges() {
        this(org.jooq.impl.DSL.name("contacts_changes"), null);
    }

    public <O extends org.jooq.Record> ContactsChanges(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord> key) {
        super(child, key, CONTACTS_CHANGES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.contacts.jooq.Contacts.CONTACTS;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.contacts.jooq.Indexes.CONTACTS_CHANGES_AK1, com.sonicle.webtop.contacts.jooq.Indexes.CONTACTS_CHANGES_AK2);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord> getPrimaryKey() {
        return com.sonicle.webtop.contacts.jooq.Keys.CONTACTS_CHANGES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.contacts.jooq.tables.records.ContactsChangesRecord>>asList(com.sonicle.webtop.contacts.jooq.Keys.CONTACTS_CHANGES_PKEY);
    }

    @java.lang.Override
    public ContactsChanges as(java.lang.String alias) {
        return new ContactsChanges(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public ContactsChanges as(org.jooq.Name alias) {
        return new ContactsChanges(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ContactsChanges rename(java.lang.String name) {
        return new ContactsChanges(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ContactsChanges rename(org.jooq.Name name) {
        return new ContactsChanges(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row5<java.lang.Long, java.lang.Integer, java.lang.String, org.joda.time.DateTime, java.lang.String> fieldsRow() {
        return (org.jooq.Row5) super.fieldsRow();
    }
}
