/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.contacts.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactsPictures extends org.jooq.impl.TableImpl<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>contacts.contacts_pictures</code>
     */
    public static final ContactsPictures CONTACTS_PICTURES = new ContactsPictures();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord> getRecordType() {
        return com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord.class;
    }

    /**
     * The column <code>contacts.contacts_pictures.contact_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord, java.lang.String> CONTACT_ID = createField(org.jooq.impl.DSL.name("contact_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>contacts.contacts_pictures.width</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord, java.lang.Integer> WIDTH = createField(org.jooq.impl.DSL.name("width"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>contacts.contacts_pictures.height</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord, java.lang.Integer> HEIGHT = createField(org.jooq.impl.DSL.name("height"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>contacts.contacts_pictures.media_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord, java.lang.String> MEDIA_TYPE = createField(org.jooq.impl.DSL.name("media_type"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>contacts.contacts_pictures.bytes</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord, byte[]> BYTES = createField(org.jooq.impl.DSL.name("bytes"), org.jooq.impl.SQLDataType.BLOB, this, "");

    private ContactsPictures(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContactsPictures(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>contacts.contacts_pictures</code> table reference
     */
    public ContactsPictures(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), CONTACTS_PICTURES);
    }

    /**
     * Create an aliased <code>contacts.contacts_pictures</code> table reference
     */
    public ContactsPictures(org.jooq.Name alias) {
        this(alias, CONTACTS_PICTURES);
    }

    /**
     * Create a <code>contacts.contacts_pictures</code> table reference
     */
    public ContactsPictures() {
        this(org.jooq.impl.DSL.name("contacts_pictures"), null);
    }

    public <O extends org.jooq.Record> ContactsPictures(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord> key) {
        super(child, key, CONTACTS_PICTURES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.contacts.jooq.Contacts.CONTACTS;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord> getPrimaryKey() {
        return com.sonicle.webtop.contacts.jooq.Keys.CONTACTS_PICTURES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord>>asList(com.sonicle.webtop.contacts.jooq.Keys.CONTACTS_PICTURES_PKEY);
    }

    @java.lang.Override
    public java.util.List<org.jooq.ForeignKey<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord, ?>> getReferences() {
        return java.util.Arrays.<org.jooq.ForeignKey<com.sonicle.webtop.contacts.jooq.tables.records.ContactsPicturesRecord, ?>>asList(com.sonicle.webtop.contacts.jooq.Keys.CONTACTS_PICTURES__CONTACTS_PICTURES_CONTACT_ID_FKEY);
    }

    private transient com.sonicle.webtop.contacts.jooq.tables.Contacts _contacts;

    public com.sonicle.webtop.contacts.jooq.tables.Contacts contacts() {
        if (_contacts == null)
            _contacts = new com.sonicle.webtop.contacts.jooq.tables.Contacts(this, com.sonicle.webtop.contacts.jooq.Keys.CONTACTS_PICTURES__CONTACTS_PICTURES_CONTACT_ID_FKEY);

        return _contacts;
    }

    @java.lang.Override
    public ContactsPictures as(java.lang.String alias) {
        return new ContactsPictures(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public ContactsPictures as(org.jooq.Name alias) {
        return new ContactsPictures(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ContactsPictures rename(java.lang.String name) {
        return new ContactsPictures(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ContactsPictures rename(org.jooq.Name name) {
        return new ContactsPictures(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row5<java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.String, byte[]> fieldsRow() {
        return (org.jooq.Row5) super.fieldsRow();
    }
}
